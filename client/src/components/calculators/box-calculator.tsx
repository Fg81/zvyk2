import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { HelpCircle } from "lucide-react";
import { calculateBoxVolume } from "@/lib/audio-calculations";
import { useToast } from "@/hooks/use-toast";

export default function BoxCalculator() {
  const { toast } = useToast();
  const [inputs, setInputs] = useState({
    speakerDiameter: "12",
    boxType: "ported",
    qts: "0.4",
    fs: "35",
    vas: "50",
  });
  
  const [results, setResults] = useState<any>(null);

  const handleCalculate = async () => {
    try {
      const result = calculateBoxVolume({
        speakerDiameter: parseFloat(inputs.speakerDiameter),
        boxType: inputs.boxType as "sealed" | "ported",
        qts: parseFloat(inputs.qts),
        fs: parseFloat(inputs.fs),
        vas: parseFloat(inputs.vas),
      });
      
      setResults(result);
      
      // Track calculation
      await fetch("/api/calculators/track", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
      });
      
      toast({
        title: "–†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω",
        description: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã —Å–ø—Ä–∞–≤–∞",
      });
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞",
        description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
        variant: "destructive",
      });
    }
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle className="flex items-center">
          <span className="text-2xl mr-3">üì¶</span>
          –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∫–æ—Ä–æ–±–∞ —Å–∞–±–≤—É—Ñ–µ—Ä–∞
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid lg:grid-cols-2 gap-8">
          <div className="space-y-6">
            <div>
              <div className="flex items-center gap-2">
                <Label htmlFor="speakerDiameter">–î–∏–∞–º–µ—Ç—Ä –¥–∏–Ω–∞–º–∏–∫–∞ (–¥—é–π–º—ã)</Label>
                <Tooltip>
                  <TooltipTrigger>
                    <HelpCircle className="h-4 w-4 text-muted-foreground" />
                  </TooltipTrigger>
                  <TooltipContent>
                    <p>–î–∏–∞–º–µ—Ç—Ä –¥–∏—Ñ—Ñ—É–∑–æ—Ä–∞ –¥–∏–Ω–∞–º–∏–∫–∞ –≤ –¥—é–π–º–∞—Ö. –í–ª–∏—è–µ—Ç –Ω–∞ –æ–±—ä–µ–º –∫–æ—Ä–ø—É—Å–∞.</p>
                  </TooltipContent>
                </Tooltip>
              </div>
              <Select value={inputs.speakerDiameter} onValueChange={(value) => setInputs({...inputs, speakerDiameter: value})}>
                <SelectTrigger data-testid="speaker-diameter-select">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="8">8" (20 —Å–º)</SelectItem>
                  <SelectItem value="10">10" (25 —Å–º)</SelectItem>
                  <SelectItem value="12">12" (30 —Å–º)</SelectItem>
                  <SelectItem value="15">15" (38 —Å–º)</SelectItem>
                  <SelectItem value="18">18" (46 —Å–º)</SelectItem>
                </SelectContent>
              </Select>
            </div>
            
            <div>
              <div className="flex items-center gap-2">
                <Label>–¢–∏–ø –∫–æ—Ä–æ–±–∞</Label>
                <Tooltip>
                  <TooltipTrigger>
                    <HelpCircle className="h-4 w-4 text-muted-foreground" />
                  </TooltipTrigger>
                  <TooltipContent>
                    <p>–ó–∞–∫—Ä—ã—Ç—ã–π –∫–æ—Ä–ø—É—Å - –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –±–∞—Å. –§–∞–∑–æ–∏–Ω–≤–µ—Ä—Ç–æ—Ä - –±–æ–ª—å—à–µ –æ–±—ä–µ–º–∞ –Ω–∞ –Ω–∏–∑–∫–∏—Ö —á–∞—Å—Ç–æ—Ç–∞—Ö.</p>
                  </TooltipContent>
                </Tooltip>
              </div>
              <div className="grid grid-cols-2 gap-4 mt-2">
                <Button
                  variant={inputs.boxType === "sealed" ? "default" : "outline"}
                  onClick={() => setInputs({...inputs, boxType: "sealed"})}
                  className="h-auto p-3"
                  data-testid="box-type-sealed"
                >
                  <div className="text-center">
                    <div className="font-medium">–ó–∞–∫—Ä—ã—Ç—ã–π</div>
                    <div className="text-sm opacity-70">–ì–µ—Ä–º–µ—Ç–∏—á–Ω—ã–π</div>
                  </div>
                </Button>
                <Button
                  variant={inputs.boxType === "ported" ? "default" : "outline"}
                  onClick={() => setInputs({...inputs, boxType: "ported"})}
                  className="h-auto p-3"
                  data-testid="box-type-ported"
                >
                  <div className="text-center">
                    <div className="font-medium">–§–∞–∑–æ–∏–Ω–≤–µ—Ä—Ç–æ—Ä</div>
                    <div className="text-sm opacity-70">–° –ø–æ—Ä—Ç–æ–º</div>
                  </div>
                </Button>
              </div>
            </div>
            
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="flex items-center gap-2">
                  <Label htmlFor="qts">Qts –¥–∏–Ω–∞–º–∏–∫–∞</Label>
                  <Tooltip>
                    <TooltipTrigger>
                      <HelpCircle className="h-4 w-4 text-muted-foreground" />
                    </TooltipTrigger>
                    <TooltipContent>
                      <p>–û–±—â–∞—è –¥–æ–±—Ä–æ—Ç–Ω–æ—Å—Ç—å –¥–∏–Ω–∞–º–∏–∫–∞. –û–±—ã—á–Ω–æ –æ—Ç 0.2 –¥–æ 0.7. –£–∫–∞–∑–∞–Ω–∞ –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–∏–Ω–∞–º–∏–∫–∞.</p>
                    </TooltipContent>
                  </Tooltip>
                </div>
                <Input
                  id="qts"
                  type="number"
                  step="0.01"
                  value={inputs.qts}
                  onChange={(e) => setInputs({...inputs, qts: e.target.value})}
                  placeholder="0.4"
                  data-testid="qts-input"
                />
              </div>
              <div>
                <div className="flex items-center gap-2">
                  <Label htmlFor="fs">Fs (–ì—Ü)</Label>
                  <Tooltip>
                    <TooltipTrigger>
                      <HelpCircle className="h-4 w-4 text-muted-foreground" />
                    </TooltipTrigger>
                    <TooltipContent>
                      <p>–†–µ–∑–æ–Ω–∞–Ω—Å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞ –¥–∏–Ω–∞–º–∏–∫–∞ –≤ –≥–µ—Ä—Ü–∞—Ö. –£–∫–∞–∑–∞–Ω–∞ –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏. –û–±—ã—á–Ω–æ 20-60 –ì—Ü.</p>
                    </TooltipContent>
                  </Tooltip>
                </div>
                <Input
                  id="fs"
                  type="number"
                  value={inputs.fs}
                  onChange={(e) => setInputs({...inputs, fs: e.target.value})}
                  placeholder="35"
                  data-testid="fs-input"
                />
              </div>
            </div>
            
            <div>
              <div className="flex items-center gap-2">
                <Label htmlFor="vas">Vas (–ª–∏—Ç—Ä—ã)</Label>
                <Tooltip>
                  <TooltipTrigger>
                    <HelpCircle className="h-4 w-4 text-muted-foreground" />
                  </TooltipTrigger>
                  <TooltipContent>
                    <p>–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–π –æ–±—ä–µ–º –≤–æ–∑–¥—É—Ö–∞ –≤ –ª–∏—Ç—Ä–∞—Ö. –£–∫–∞–∑–∞–Ω –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–∏–Ω–∞–º–∏–∫–∞.</p>
                  </TooltipContent>
                </Tooltip>
              </div>
              <Input
                id="vas"
                type="number"
                value={inputs.vas}
                onChange={(e) => setInputs({...inputs, vas: e.target.value})}
                placeholder="50"
                data-testid="vas-input"
              />
            </div>
            
            <Button onClick={handleCalculate} className="w-full gradient-glow" data-testid="calculate-button">
              –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—ä–µ–º
            </Button>
          </div>
          
          <div className="bg-muted/30 rounded-xl p-6">
            <h3 className="text-xl font-semibold text-card-foreground mb-6">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞</h3>
            {results ? (
              <div className="space-y-4" data-testid="calculation-results">
                <div className="flex justify-between items-center py-3 border-b border-border">
                  <span className="text-muted-foreground">–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ–±—ä–µ–º:</span>
                  <span className="font-semibold text-card-foreground">{results.volume} –ª</span>
                </div>
                {results.tuningFrequency && (
                  <div className="flex justify-between items-center py-3 border-b border-border">
                    <span className="text-muted-foreground">–ß–∞—Å—Ç–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</span>
                    <span className="font-semibold text-card-foreground">{results.tuningFrequency} –ì—Ü</span>
                  </div>
                )}
                {results.portDimensions && (
                  <>
                    <div className="flex justify-between items-center py-3 border-b border-border">
                      <span className="text-muted-foreground">–†–∞–∑–º–µ—Ä –ø–æ—Ä—Ç–∞:</span>
                      <span className="font-semibold text-card-foreground">{results.portDimensions}</span>
                    </div>
                    <div className="flex justify-between items-center py-3">
                      <span className="text-muted-foreground">–î–ª–∏–Ω–∞ –ø–æ—Ä—Ç–∞:</span>
                      <span className="font-semibold text-card-foreground">{results.portLength} —Å–º</span>
                    </div>
                  </>
                )}
                
                <div className="mt-6 p-4 bg-primary/5 border border-primary/20 rounded-lg">
                  <div className="flex items-start">
                    <svg className="w-5 h-5 text-primary mt-0.5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <div>
                      <h4 className="font-medium text-card-foreground mb-1">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</h4>
                      <p className="text-sm text-muted-foreground">{results.recommendation}</p>
                    </div>
                  </div>
                </div>
              </div>
            ) : (
              <div className="text-center py-8 text-muted-foreground">
                –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–∏–Ω–∞–º–∏–∫–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—ä–µ–º" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
              </div>
            )}
          </div>
        </div>
      </CardContent>
    </Card>
  );
}
